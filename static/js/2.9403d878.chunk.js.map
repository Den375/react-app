{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.jsx"],"names":["module","exports","commonError","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_3__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_4__","react_redux__WEBPACK_IMPORTED_MODULE_5__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_6__","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","_Login_module_css__WEBPACK_IMPORTED_MODULE_8__","_Login_module_css__WEBPACK_IMPORTED_MODULE_8___default","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","props","a","createElement","onSubmit","handleSubmit","name","placeholder","component","Input","validate","required","type","className","s","error","connect","state","isAuth","auth","login","to","formData","email","password","rememberMe"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,8DCDlBC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,GAAAW,EAAAX,EAAA,IAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAAK,EAAAQ,GASME,EAAcC,YAAiB,IAqC/BC,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,CApBL,SAAAE,GACd,OAAOhB,EAAAiB,EAAAC,cAAA,QAAMC,SAAUH,EAAMI,cACrBpB,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,QAAQC,YAAY,mDAAgBC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAAegB,KAAK,UAE/G3B,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,WAAWC,YAAY,kFAAiBC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAAegB,KAAK,cAEnH3B,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,aAAaE,UAAWC,IAAOG,KAAK,aADpD,oFAGA3B,EAAAiB,EAAAC,cAAA,OAAKU,UAAWC,IAAElC,aACbqB,EAAMc,OAEX9B,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAA,oDAaDa,sBANS,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,SAIa,CAACE,WAA1BJ,CA3CD,SAAAf,GAKV,OAAIA,EAAMiB,OACCjC,EAAAiB,EAAAC,cAACV,EAAA,EAAD,CAAU4B,GAAI,aAGlBpC,EAAAiB,EAAAC,cAAA,WACHlB,EAAAiB,EAAAC,cAAA,mBACAlB,EAAAiB,EAAAC,cAACL,EAAD,CAAgBM,SAVL,SAACkB,GACZrB,EAAMmB,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/2.9403d878.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonError\":\"Login_commonError__20OWB\"};","import React from 'react'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from  \"./Login.module.css\"\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst Login = props => {\r\n    const submit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={submit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginForm = props => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"email\" placeholder='Введите email' component={Input} validate={[required, maxLength50 ]} type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\" placeholder='Введите пароль' component={Input} validate={[required, maxLength50 ]} type=\"password\" />\r\n            </div>\r\n            <div>\r\n                <Field name=\"rememberMe\" component={Input} type=\"checkbox\" /> Запомнить меня\r\n            </div>\r\n            <div className={s.commonError}>\r\n                {props.error}\r\n            </div>\r\n            <div>\r\n                <button>Войти</button>\r\n            </div>\r\n           </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n"],"sourceRoot":""}