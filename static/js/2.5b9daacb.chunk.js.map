{"version":3,"sources":["components/Login/Login.module.css","components/Login/Login.tsx"],"names":["module","exports","commonError","__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","redux_form__WEBPACK_IMPORTED_MODULE_1__","redux_form__WEBPACK_IMPORTED_MODULE_2__","_common_FormsControls_FormsControls__WEBPACK_IMPORTED_MODULE_3__","_utils_validators_validators__WEBPACK_IMPORTED_MODULE_4__","_redux_auth_reducer__WEBPACK_IMPORTED_MODULE_5__","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","_Login_module_css__WEBPACK_IMPORTED_MODULE_7__","_Login_module_css__WEBPACK_IMPORTED_MODULE_7___default","react_redux__WEBPACK_IMPORTED_MODULE_8__","maxLength50","maxLengthCreator","LoginReduxForm","reduxForm","form","props","a","createElement","onSubmit","handleSubmit","name","placeholder","component","Input","validate","required","type","captchaUrl","src","alt","className","s","error","LoginPage","isAuth","useSelector","state","auth","dispatch","useDispatch","to","formData","login","email","password","rememberMe","captcha"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,8DCDlBC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAAK,EAAAO,GAAAE,EAAAd,EAAA,IA0CMe,EAAcC,YAAiB,IAwB/BC,EAAiBC,YAAkD,CAACC,KAAM,SAAzDD,CAtBoF,SAAAE,GACvG,OAAOhB,EAAAiB,EAAAC,cAAA,QAAMC,SAAUH,EAAMI,cACrBpB,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,QAAQC,YAAY,mDAAgBC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAAegB,KAAK,UAE/G3B,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,WAAWC,YAAY,kFAAiBC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAAegB,KAAK,cAEnH3B,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,aAAaE,UAAWC,IAAOG,KAAK,aADpD,qFAGCX,EAAMY,YAAc5B,EAAAiB,EAAAC,cAAA,OAAKW,IAAKb,EAAMY,WAAYE,IAAI,YACpDd,EAAMY,YAAc5B,EAAAiB,EAAAC,cAAChB,EAAA,EAAD,CAAOmB,KAAK,UAAUC,YAAY,wFAAkBC,UAAWC,IAAOC,SAAU,CAACC,IAAUf,GAAegB,KAAK,SACpI3B,EAAAiB,EAAAC,cAAA,OAAKa,UAAWC,IAAErC,aACbqB,EAAMiB,OAEXjC,EAAAiB,EAAAC,cAAA,WACIlB,EAAAiB,EAAAC,cAAA,oDAODgB,UAnDO,WAElB,IAAMC,EAASC,YAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKH,SACzDP,EAAaQ,YAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKV,aAE7DW,EAAWC,cAMjB,OAAIL,EACOnC,EAAAiB,EAAAC,cAACX,EAAA,EAAD,CAAUkC,GAAI,aAGlBzC,EAAAiB,EAAAC,cAAA,WACHlB,EAAAiB,EAAAC,cAAA,mBACAlB,EAAAiB,EAAAC,cAACL,EAAD,CAAgBM,SAVL,SAACuB,GACZH,EAASI,YAAMD,EAASE,MAAOF,EAASG,SAAUH,EAASI,WAAYJ,EAASK,WAS9CnB,WAAYA","file":"static/js/2.5b9daacb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonError\":\"Login_commonError__20OWB\"};","import React, {FC} from 'react'\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport s from  \"./Login.module.css\"\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\ntype LoginFormValuesType = {\r\n    captcha: string;\r\n    rememberMe: boolean;\r\n    password: string;\r\n    email: string;\r\n}\r\n\r\nconst LoginPage: FC = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={submit} captchaUrl={captchaUrl}/>\r\n    </div>\r\n}\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = props => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"email\" placeholder='Введите email' component={Input} validate={[required, maxLength50 ]} type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <Field name=\"password\" placeholder='Введите пароль' component={Input} validate={[required, maxLength50 ]} type=\"password\" />\r\n            </div>\r\n            <div>\r\n                <Field name=\"rememberMe\" component={Input} type=\"checkbox\" />  Запомнить меня\r\n            </div>\r\n            {props.captchaUrl && <img src={props.captchaUrl} alt='captcha'/>}\r\n            {props.captchaUrl && <Field name=\"captcha\" placeholder='Введите символы' component={Input} validate={[required, maxLength50 ]} type=\"text\" />}\r\n            <div className={s.commonError}>\r\n                {props.error}\r\n            </div>\r\n            <div>\r\n                <button>Войти</button>\r\n            </div>\r\n           </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({form: 'login'})(LoginForm)\r\n\r\nexport default LoginPage\r\n\r\n"],"sourceRoot":""}