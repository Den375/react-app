{"version":3,"sources":["components/common/Paginator/Paginator.module.css","components/Users/User.module.css","redux/users-selectors.ts","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","paginator","pageNumber","currentPage","userContainer","class1","class2","getUsers","createSelector","state","usersPage","users","filter","u","getCurrentPage","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUsersFilter","Paginator","_ref","_ref$currentPage","_ref$onPageChanged","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","Object","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","useSelector","useEffect","react_default","a","createElement","className","s","onClick","p","map","cn","defineProperty","User","user","isAuth","unfollow","follow","react_router_dom","to","id","src","photos","small","userDefPhoto","alt","followed","disabled","some","name","status","usersSearchFormValidate","values","UsersSearchForm","React","memo","props","formik_esm","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","setSubmitting","onFilterChanged","_ref2","isSubmitting","type","placeholder","as","value","Users","selectIsAuth","dispatch","useDispatch","history","useHistory","parsed","queryString","location","search","substr","actualPage","actualFilter","page","Number","objectSpread","requestUsers","query","pathname","followFriend","userId","unfollowFriend","userID","common_Paginator_Paginator","Users_User","key","UsersPage","pageTitle","Preloader","Users_Users"],"mappings":"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","file":"static/js/1.c2c414bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1EL2A\",\"pageNumber\":\"Paginator_pageNumber__2AyjD\",\"currentPage\":\"Paginator_currentPage__2yj7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userContainer\":\"User_userContainer__2lnzq\",\"class1\":\"User_class1__3sL6m\",\"class2\":\"User_class2__1bS0d\"};","import {createSelector} from \"reselect\";\r\nimport {AppStateType} from \"./redux-store\";\r\n// зависимость\r\nconst getUsersSelector = (state: AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n    return users.filter(u => true)  // если не использовать наш селектор, при каждом dispatch будет вызов mapState и в памяти будет создаваться новый массив\r\n})                                  // что ухудшит производительность. filter здесь излишний, для примера\r\n\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const getUsersFilter = (state: AppStateType) => {\r\n    return state.usersPage.filter;\r\n}","import React, {useEffect, useLayoutEffect, useRef, useState} from \"react\";\r\nimport s from \"./Paginator.module.css\";\r\nimport cn from \"classnames\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../../redux/users-selectors\";\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\n const Paginator: React.FC<PropsType> = ({totalUsersCount, pageSize,\r\n                                          currentPage= 1, onPageChanged =  () => {},\r\n                                          portionSize= 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n     useEffect(() => {\r\n         setPortionNumber(Math.ceil(currentPage/10))\r\n     }, [filter])\r\n\r\n    return <div className={s.paginator}>\r\n\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1), onPageChanged(leftPortionPageNumber - portionSize) }}>PREV</button> }\r\n\r\n        {pages.filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map( p => {\r\n                return <span className={cn(s.pageNumber, {[s.currentPage]: currentPage === p})}\r\n                             onClick={() => onPageChanged(p)}> {p} </span>\r\n            })}\r\n\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1), onPageChanged(leftPortionPageNumber + portionSize) }}>NEXT</button> }\r\n\r\n         </div>\r\n}\r\n\r\nexport default Paginator\r\n","import s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userDefPhoto from \"../../assets/images/defaultAvatar.jpg\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    isAuth: boolean\r\n    followingInProgress: Array<number>\r\n    unfollow: (userID: number) => void\r\n    follow: (userID: number) => void\r\n}\r\n\r\nconst User: React.FC<PropsType> = ({user, isAuth, followingInProgress, unfollow, follow}) => {\r\n    return <div className={s.userContainer} >\r\n        <div className={s.class1}>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id} >\r\n                    <img src={user.photos.small || userDefPhoto} alt=\"photo\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {!isAuth ? null  :\r\n                    user.followed\r\n                        ? <button  disabled={followingInProgress.some(id => id === user.id)}\r\n                                   onClick={() => {unfollow(user.id)}}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {follow(user.id)}}>Follow</button>}\r\n            </div>\r\n        </div>\r\n        <div className={s.class2}>\r\n            <div>{user.name}</div>\r\n            <div>{'user.location.city'}</div>\r\n            <div></div>\r\n            <div></div>\r\n            <div>{user.status}</div>\r\n            <div>{'user.location.country'}</div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default User;","import {Field, Form, Formik} from \"formik\";\r\nimport React from \"react\";\r\nimport {FilterType} from \"../../redux/users-reducer\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getUsersFilter} from \"../../redux/users-selectors\";\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors;\r\n}\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: 'true' | 'false' | 'null'\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false);\r\n\r\n    }\r\n\r\n    return <div>\r\n        <Formik enableReinitialize\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as 'true' | 'false' | 'null'}}\r\n                validate={usersSearchFormValidate} onSubmit={submit}>\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\" placeholder=\"Поиск...\"/>\r\n\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})","import React, {useEffect} from \"react\"\r\nimport Paginator from \"../common/Paginator/Paginator\"\r\nimport User from \"./User\"\r\nimport {UsersSearchForm} from \"./UsersSearchForm\"\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\"\r\nimport {selectIsAuth} from \"../../redux/auth-selectors\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport * as queryString from \"querystring\"\r\n\r\n\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = {\r\n    term?: string\r\n    page?: string\r\n    friend?: string\r\n}\r\n\r\nexport const Users: React.FC<PropsType> = () => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const isAuth = useSelector(selectIsAuth)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term }\r\n\r\n        switch(parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/developers',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const followFriend = (userId: number) => {\r\n        dispatch(follow(userId));\r\n    }\r\n\r\n    const unfollowFriend = (userID: number) => {\r\n        dispatch(unfollow(userID))\r\n    }\r\n\r\n        return <div>\r\n                  <UsersSearchForm onFilterChanged={onFilterChanged}  />\r\n                  <Paginator totalUsersCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}/>\r\n                  <div>\r\n                    {users.map(u => <User user={u} key={u.id} isAuth={isAuth}\r\n                                        followingInProgress={followingInProgress}\r\n                                        unfollow={unfollowFriend} follow={followFriend}/>)}\r\n                  </div>\r\n               </div>\r\n}\r\n\r\n\r\n\r\n","import {Users} from \"./Users\";\r\nimport {useSelector} from \"react-redux\";\r\nimport React, {FC} from \"react\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\ntype PropsType = {\r\n    pageTitle: string\r\n}\r\n\r\nconst UsersPage: FC<PropsType> = (props) => {\r\n\r\n    const isFetching = useSelector(getIsFetching)\r\n\r\n    return <div>\r\n        <h3>{props.pageTitle}</h3>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users/>\r\n    </div>\r\n}\r\n\r\nexport default UsersPage\r\n\r\n/*const AuthRedirect = withAuthRedirect(UsersContainer)\r\n\r\nexport default connect(mapStateToProps, {\r\n    getUsers,\r\n    setCurrentPage,\r\n    follow,\r\n    unfollow\r\n})(AuthRedirect)*/\r\n\r\n/*const mapStateToProps = (state) => {\r\n        return {\r\n            users: state.usersPage.users,\r\n            currentPage: state.usersPage.currentPage,\r\n            pageSize: state.usersPage.pageSize,\r\n            totalUsersCount: state.usersPage.totalUsersCount,\r\n            isFetching: state.usersPage.isFetching,\r\n            isFollowingProgress: state.usersPage.isFollowingProgress,\r\n        }\r\n    }*/\r\n\r\n/*const mapDispatchToProps = (dispatch) => {\r\n        return {\r\n            getUsers: (currentPage, pageSize) => {\r\n                dispatch(gerUsersThunkCreator(currentPage, pageSize))\r\n            },\r\n            follow: (userID) => {\r\n                dispatch(followAC(userID))\r\n            },\r\n            unFollow: (userID) => {\r\n                dispatch(unFollowAC(userID))\r\n            },\r\n            setUsers: (users) => {\r\n                dispatch(setUsersAC(users))\r\n            },\r\n            setCurrentPage: (pageNumber) => {\r\n                dispatch(setCurrentPageAC(pageNumber))\r\n            },\r\n            setTotalUsersCount: (totalUsersCount) => {\r\n                dispatch(setTotalUsersCountAC(totalUsersCount))\r\n            },\r\n            toggleIsFetching: (isFetching) => {\r\n                dispatch(toggleIsFetchingAC(isFetching))\r\n            }\r\n        }\r\n    }*/\r\n"],"sourceRoot":""}